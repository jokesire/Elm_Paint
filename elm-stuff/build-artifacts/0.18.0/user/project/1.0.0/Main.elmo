var _user$project$Main$view = function (model) {
	var toPaths = function (positions) {
		return A2(
			_evancz$elm_graphics$Collage$move,
			{ctor: '_Tuple2', _0: -750, _1: 750},
			A2(
				_evancz$elm_graphics$Collage$traced,
				_evancz$elm_graphics$Collage$defaultLine,
				_evancz$elm_graphics$Collage$path(
					A2(
						_elm_lang$core$List$map,
						function (_p0) {
							var _p1 = _p0;
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Basics$toFloat(_p1.x),
								_1: _elm_lang$core$Basics$toFloat(0 - _p1.y)
							};
						},
						positions))));
	};
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _evancz$elm_graphics$Element$toHtml(
				A3(
					_evancz$elm_graphics$Collage$collage,
					1500,
					1500,
					A2(_elm_lang$core$List$map, toPaths, model.pencilPath))),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'DragStart':
				return {
					ctor: '_Tuple2',
					_0: {
						mouseDown: true,
						pencilPath: {
							ctor: '::',
							_0: {
								ctor: '::',
								_0: _p2._0,
								_1: {ctor: '[]'}
							},
							_1: model.pencilPath
						}
					},
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'DragAt':
				var _p4 = _p2._0;
				var _p3 = model.pencilPath;
				if (_p3.ctor === '::') {
					return {
						ctor: '_Tuple2',
						_0: {
							mouseDown: true,
							pencilPath: {
								ctor: '::',
								_0: A2(
									_elm_lang$core$Basics_ops['++'],
									_p3._0,
									{
										ctor: '::',
										_0: _p4,
										_1: {ctor: '[]'}
									}),
								_1: _p3._1
							}
						},
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: {
							mouseDown: true,
							pencilPath: {
								ctor: '::',
								_0: {
									ctor: '::',
									_0: _p4,
									_1: {ctor: '[]'}
								},
								_1: {ctor: '[]'}
							}
						},
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			default:
				return {
					ctor: '_Tuple2',
					_0: {mouseDown: false, pencilPath: model.pencilPath},
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$Model = F2(
	function (a, b) {
		return {mouseDown: a, pencilPath: b};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A2(
		_user$project$Main$Model,
		false,
		{ctor: '[]'}),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$DragEnd = function (a) {
	return {ctor: 'DragEnd', _0: a};
};
var _user$project$Main$DragAt = function (a) {
	return {ctor: 'DragAt', _0: a};
};
var _user$project$Main$DragStart = function (a) {
	return {ctor: 'DragStart', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	var _p5 = model.mouseDown;
	if (_p5 === false) {
		return _elm_lang$mouse$Mouse$downs(_user$project$Main$DragStart);
	} else {
		return _elm_lang$core$Platform_Sub$batch(
			{
				ctor: '::',
				_0: _elm_lang$mouse$Mouse$moves(_user$project$Main$DragAt),
				_1: {
					ctor: '::',
					_0: _elm_lang$mouse$Mouse$ups(_user$project$Main$DragEnd),
					_1: {ctor: '[]'}
				}
			});
	}
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
